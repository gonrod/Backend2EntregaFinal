<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mi Carrito</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body>
    {{> header}}

    <h1>Mi Carrito</h1>

    {{#if emptyCart}}
        <p>Tu carrito está vacío.</p>
    {{else}}
        <div id="cart-container">
            <ul class="cart-list">
                {{#each cart.products}}
                <li class="cart-item">
                    <div class="cart-product-info">
                        <h3>{{this.product.title}}</h3>
                        <p>Precio: ${{this.product.price}}</p>
                        <p>Cantidad: {{this.quantity}}</p>
                        <button class="remove-from-cart-btn" data-product-id="{{this.product._id}}">Eliminar</button>
                    </div>
                </li>
                {{/each}}
            </ul>
        </div>
        <button id="checkout-btn">Finalizar Compra</button>
    {{/if}}

    {{> footer}}

    <script>
        document.addEventListener("DOMContentLoaded", async () => {
            let cartIcon = document.getElementById("cart-icon");

            const waitForCartId = async () => {
                return new Promise(resolve => {
                    const checkCartId = () => {
                        const cartId = cartIcon.getAttribute("data-cart-id");
                        if (cartId && cartId !== "undefined" && cartId !== "null") {
                            console.log("✅ cartId detectado en carrito:", cartId);
                            resolve(cartId);
                        } else {
                            setTimeout(checkCartId, 100);
                        }
                    };
                    checkCartId();
                });
            };

            let cartId = await waitForCartId();

            if (!cartId) {
                console.error("⚠️ No se pudo obtener el cartId del usuario.");
                alert("Debes iniciar sesión para ver tu carrito.");
                return;
            }

            // Manejar eventos de "Eliminar del carrito"
            document.querySelectorAll(".remove-from-cart-btn").forEach(button => {
                button.addEventListener("click", async (event) => {
                    const productId = event.target.getAttribute("data-product-id");
                    try {
                        const response = await axios.delete(`/api/carts/${cartId}/product/${productId}`);
                        if (response.status === 200) {
                            alert("✅ Producto eliminado del carrito.");
                            location.reload(); // Recargar la página para actualizar la vista
                        }
                    } catch (error) {
                        console.error("❌ Error al eliminar producto:", error.response ? error.response.data : error);
                        alert("No se pudo eliminar el producto del carrito.");
                    }
                });
            });

            // Manejar el checkout
            document.getElementById("checkout-btn").addEventListener("click", async () => {
                try {
                    const response = await axios.post(`/api/carts/${cartId}/checkout`);
                    if (response.status === 200) {
                        alert("✅ Compra finalizada con éxito.");
                        location.href = "/"; // Redirigir al inicio
                    }
                } catch (error) {
                    console.error("❌ Error al finalizar compra:", error.response ? error.response.data : error);
                    alert("No se pudo finalizar la compra.");
                }
            });
        });
    </script>
</body>
</html>
